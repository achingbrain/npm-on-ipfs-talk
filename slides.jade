article

  section(data-bespoke-backdrop='nebula')
    h1 npm on IPFS
    aside(style='font-size: 50px')
      li Hello world

  section
    h2 Alex Potsides
    p.bullet JavaScript Developer at Protocol Labs
    p.bullet Working on IPFS
    p.bullet @achingbrain on GitHub and Twitter
    aside(style='font-size: 50px')
      li Who am I

  section
    img(src='images/npm-on-ipfs.jpg')
    aside(style='font-size: 50px')
      li A way to install your dependencies using the power of the distributed web

  section
    img(src='images/npm-logo.svg')
    aside(style='font-size: 50px')
      li npm
      li largest package registry in the world
      li over 850k packages
      li over 36 billion downloads a month

  section
    img(src='images/ipfs.svg')
    aside(style='font-size: 50px')
      li What is IPFS
      li Content addressed
      li Distributed File System
      li Used to build distributed applications

  //- section
  //-   img(src='images/npm-on-ipfs.svg')
  //-   aside(style='font-size: 50px')
  //-     li commons registry
  //-     li mirrors all of npm on ipfs
  //-     li used internally to ensure ipfs can process TBs of data

  section(data-bespoke-backdrop='sunrise')
    p
      pre
        code npm install --registry=https://registry.js.ipfs.io
      pre
        code yarn --registry=https://registry.js.ipfs.io
    aside(style='font-size: 50px')
      li IPFS
      li How does it work

  //- section
  //-   img(src='images/registry-proxy-1.png')
  //-   aside(style='font-size: 50px')
  //-     li ipfs-npm-registry-mirror
  //-     li js app written with ipfs
  //-     li translates requests for modules into content hashes
  //-     li fetches the content and serves it
  //-     li gets from npm if not available
  //-     li adds new npm content to the network

  //- section
  //-   img(src='images/registry-proxy-hash.png')
  //-   aside(style='font-size: 50px')
  //-     li user installs something
  //-     li npm doesn't understand ipfs as a transport
  //-     li only supports http

  //- section
  //-   img(src='images/registry-proxy-2.png')
  //-   aside(style='font-size: 50px')
  //-     li user installs something
  //-     li npm doesn't understand ipfs as a transport
  //-     li only supports http

  section
    img(src='images/registry-proxy-3.png')
    aside(style='font-size: 50px')
      li we stuck an nginx on it
      li load balances to IPFS nodes
      li nodes keep content available on the network

  //- section
  //-   h2 But how is this better?
  //-   aside(style='font-size: 50px')
  //-     li Like this there's not much benefit
  //-     li What if you could skip HTTP and just pull content from IPFS?

  //- section
  //-   h2 You can!
  //-   pre npm install -g ipfs-npm
  //-   pre.bullet ipfs-npm install
  //-   p.bullet or
  //-   pre.bullet ipfs-yarn
  //-   aside(style='font-size: 50px')
  //-     li Supports yarn too

  section
    h2 ipfs-npm
    pre npm install -g ipfs-npm
    pre.bullet ipfs-npm install
    p.bullet or
    pre.bullet ipfs-yarn
    aside(style='font-size: 50px')
      li Supports yarn too

  section
    h1 Demo

  section
    div(id='terminal')
    aside(style='font-size: 50px')
      li npm install ipfs-npm
      li mkdir foo
      li cd foo
      li ipfs-npm init -y
      li ipfs-npm install --save bignumber
      li offline
      li turn off wifi
      li ipfs-npm install --save bignumber --request-retries=1

  section
    img(src='images/ipfs-npm-internals.png')
    aside(style='font-size: 50px')
      li starts a webserver and an IPFS node
      li stores module to hash mappings in mfs
      li uses IPFS node to serve content with hashes
      li fetches non-hashed content from npm and hashes it
      li proxies all other requests to public npm registry (publishing etc)

  section
    img(src='images/ipfs-npm-replication.png')
    aside(style='font-size: 50px')
      li replication nodes seeding IPFS with content
      li running 24x7
      li what next?
      li add ipfs as a transport to npm
      li add ipfs hashes to npm registry
      li publishing to IPFS?
      li no central registry?

  section
    h1 Next
    aside(style='font-size: 50px')

  section
    h2 Distributed publishing
    li.bullet https://github.com/zkat/pacote/pull/173
    li.bullet Publish a packument over IPNS
    pre.bullet "my-module": "ipns://Qmfoo#^1.0.0"

  section
    h2 npm-in-a-box
    li.bullet A local-network npm proxy on a Raspberry Pi
    li.bullet Cache npm modules for you
    li.bullet Connected to the IPFS network
    li.bullet Publish IPNS names for your published modules
    li.bullet IPFS Camp Science Fair Project!

  section
    h2 Thanks!
    p
      pre https://github.com/ipfs/js-ipfs
      pre https://github.com/ipfs-shipyard/npm-on-ipfs
      pre https://github.com/ipfs-shipyard/ipfs-npm-registry-mirror
    p Alex Potsides
    small @achingbrain

  section
    h2 Q&amp;A
    p
      pre https://github.com/ipfs/js-ipfs
      pre https://github.com/ipfs-shipyard/npm-on-ipfs
      pre https://github.com/ipfs-shipyard/ipfs-npm-registry-mirror
    p Alex Potsides
    small @achingbrain
